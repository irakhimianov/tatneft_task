[tool.poetry]
name = "task_3"
version = "0.1.0"
description = ""
authors = ["Ilgiz Rakhimianov <i@rakhimianov.ru>"]
readme = "README.md"


[tool.poetry.dependencies]
python = "^3.10"
django = "^4"
djangorestframework = "^3.14.0"
django-constance = "^3.1.0"
drf-yasg = "^1.21.7"
django-cors-headers = "^4.3.1"
drf-standardized-errors = "^0.12.6"
django-filter = "^23.5"
celery = "^5.3.6"
django-celery-beat = "^2.5.0"
django-celery-results = "^2.5.1"
ipython = "^8.21.0"
redis = "^5.0.1"
psycopg2-binary = "^2.9.9"
gunicorn = "^21.2.0"
python-dotenv = "^1.0.1"
pre-commit = "^3.6.0"
pillow = "^10.2.0"
requests = "^2.31.0"


[tool.poetry.group.test.dependencies]
pytest-factoryboy = "^2.6.0"
pytest-django = "^4.7.0"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"


[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
black = "^23.9.1"
isort = "^5.12.0"
pre-commit = "^3.4.0"
pep8-naming = "^0.13.3"
flake8-absolute-import = "^1.0.0.1"
flake8-annotations = "^3.0.1"
flake8-broken-line = "^1.0.0"
flake8-bugbear = "^23.9.16"
flake8-eradicate = "^1.5.0"
flake8-mutable = "^1.2.0"
flake8-pep3101 = "^2.0.0"
flake8-print = "^5.0.0"
flake8-printf-formatting = "^1.1.2"
flake8-pytest-style = "^1.7.2"
flake8-tuple-unpack-limit = "^0.0.1"
flake8-quotes = "^3.3.2"
flake8-simplify = "^0.21.0"
flake8-polyfill = "^1.0.2"
flake8-alfred = "^1.1.1"
flake8-string-format = "^0.3.0"
flake8-unused-arguments = "^0.0.13"
flake8-useless-assert = "^0.4.4"
flake8-commas = "^2.1.0"
flake8-comprehensions = "^3.14.0"
flake8-return = "^1.2.0"
flake8-cognitive-complexity = "^0.1.0"
flake8-pep585 = "^0.1.7"
flake8-django = "^1.4"
flake8-pyproject = "^1.2.3"


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "project.settings"
python_files = "test_*.py"
filterwarnings = "ignore::DeprecationWarning"


[tool.flake8]
ignore = ["ANN101", "E800", "PT009", "W503", "DJ08"]
max-line-length = 120
select = ["DJ", "DJ10"]
exclude = [".cache/*", "*venv/*", "project/*", "*/migrations/*", "*/__init__.py", "manage.py"]


[tool.black]
include = '\.py$'
skip-string-normalization = true
target-version = ["py310"]


[tool.isort]
profile = "black"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
